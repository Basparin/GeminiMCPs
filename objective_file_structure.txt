/home/basparin/Escritorio/GeminiMCPs/
├── .env.example
├── .gitignore
├── .pre-commit-config.yaml
├── .pydocstyle.ini
├── pyproject.toml
├── README.md
├── requirements.txt
├── .codesage/
├── .git/
├── .pytest_cache/
├── .ruff_cache/
├── archive/
│   └── improvement_plan.md
│   └── Project overview by gemini 2.5 pro.txt (if it exists)
├── audit_results/
│   └── test_results_report.md (if it exists)
├── benchmark_results/
│   └── baseline_results.json (if it exists)
│   └── bursty_results.json (if it exists)
│   └── benchmark_report_*.json (if it exists)
│   └── benchmark_summary_*.txt (if it exists)
├── bin/
│   └── start_server.sh
├── codesage_mcp/
│   ├── __init__.py
│   ├── adaptive_cache_manager.py
│   ├── auto_performance_tuner.py
│   ├── cache_analysis.py
│   ├── cache.py
│   ├── chunking.py
│   ├── codebase_manager.py
│   ├── config.py
│   ├── gemini_compatibility.py
│   ├── indexing.py
│   ├── intelligent_prefetcher.py
│   ├── llm_analysis.py
│   ├── main.py
│   ├── memory_manager.py
│   ├── memory_pattern_monitor.py
│   ├── performance_monitor.py
│   ├── README.md
│   ├── searching.py
│   ├── trend_analysis.py
│   ├── user_feedback.py
│   ├── utils.py
│   ├── workload_adaptive_memory.py
│   ├── workload_pattern_recognition.py
│   └── tools/
│       ├── __init__.py
│       ├── adaptive_cache_tools.py
│       ├── auto_performance_tuning_tools.py
│       ├── cache_analysis_tools.py
│       ├── code_generation.py
│       ├── codebase_analysis.py
│       ├── configuration.py
│       ├── continuous_improvement.py
│       ├── intelligent_prefetch_tools.py
│       ├── llm_analysis.py
│       ├── memory_pattern_tools.py
│       ├── performance_monitoring.py
│       ├── trend_analysis_tools.py
│       ├── user_feedback_tools.py
│       ├── workload_adaptive_memory_tools.py
│       └── workload_pattern_recognition_tools.py
├── codesage_mcp.egg-info/
├── config/
│   └── templates/
├── docs/
│   ├── architecture.md
│   ├── business_requirements_validation.md
│   ├── caching_system.md
│   ├── configuration.md
│   ├── docker_deployment.md
│   ├── docstring_standard.md
│   ├── load_testing_report.md
│   ├── memory_management.md
│   ├── operational_runbook.md
│   ├── performance_optimization.md
│   ├── post_deployment_monitoring_guide.md
│   ├── production_deployment_guide.md
│   ├── production_metrics_baseline.md
│   ├── production_readiness.md
│   ├── tools_reference.md
│   ├── troubleshooting_guide.md
│   ├── AGENT_WORKFLOW.md
│   ├── GEMINI_CLI_DEBUGGING_GUIDE.md
│   ├── GEMINI.md
│   └── WORKSPACE_PLAN.md
├── mcp/
│   └── mcp_server.py
├── monitoring/
├── scripts/
├── tests/
│   ├── benchmark_performance.py
│   ├── test_cache_system.py
│   ├── test_codebase_manager.py
│   ├── test_configuration_tools.py
│   ├── test_gemini_compatibility.py
│   ├── test_generate_boilerplate.py
│   ├── test_generate_llm_api_wrapper.py
│   ├── test_generate_unit_tests.py
│   ├── test_indexing_system.py
│   ├── test_integration.py
│   ├── test_jsonrpc_response_format.py
│   ├── test_main_suggest_code_improvements.py
│   ├── test_main.py
│   ├── test_memory_manager.py
│   ├── test_parse_llm_response.py
│   ├── test_suggest_code_improvements.py
│   ├── test_todo_fixme_resolution.py
│   ├── test_connection_handling.py
│   ├── test_gemini_integration.py
│   ├── test_jsonrpc_format.py
│   ├── test_mcp_server_integration.py
│   ├── test_mcp_server_responses.py
│   └── workload_simulation.py
└── venv/
