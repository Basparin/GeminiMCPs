# CodeSage MCP Server - Large Codebase Environment Configuration
# =================================================================
# This configuration is optimized for large codebases (>100k files)
# with advanced indexing, memory management, and scaling features.

# =================================================================
# LLM API CONFIGURATION
# =================================================================

# Primary LLM Provider (choose one - scalable)
GROQ_API_KEY="your-scalable-groq-api-key"
# OPENROUTER_API_KEY="your-scalable-openrouter-api-key"
# GOOGLE_API_KEY="your-scalable-google-api-key"

# =================================================================
# PERFORMANCE & MEMORY CONFIGURATION
# =================================================================

# Memory Management (Large Scale)
CODESAGE_MEMORY_LIMIT=2GB
CODESAGE_MAX_MEMORY_MB=4096
CODESAGE_ENABLE_MEMORY_MONITORING=true
CODESAGE_MEMORY_CHECK_INTERVAL=10

# Model Optimization (Large Scale)
CODESAGE_ENABLE_MODEL_QUANTIZATION=true
CODESAGE_MODEL_CACHE_TTL_MINUTES=180
CODESAGE_ENABLE_MEMORY_MAPPED_INDEXES=true

# =================================================================
# CACHING CONFIGURATION
# =================================================================

# Cache Sizes (Large Scale)
CODESAGE_EMBEDDING_CACHE_SIZE=25000
CODESAGE_SEARCH_CACHE_SIZE=5000
CODESAGE_FILE_CACHE_SIZE=500

# Cache Behavior (Optimized for Scale)
CODESAGE_SIMILARITY_THRESHOLD=0.9
CODESAGE_MAX_FILE_SIZE_MB=2
CODESAGE_CACHE_PERSISTENCE_ENABLED=true
CODESAGE_CACHE_WARMING_ENABLED=true

# Advanced Caching (Large Scale)
CODESAGE_ADAPTIVE_CACHE_ENABLED=true
CODESAGE_MEMORY_THRESHOLD_HIGH=0.85
CODESAGE_MEMORY_THRESHOLD_LOW=0.25
CODESAGE_PREFETCH_ENABLED=true
CODESAGE_MAX_PREFETCH_FILES=15
CODESAGE_DEPENDENCY_TRACKING_ENABLED=true
CODESAGE_DEPENDENCY_INVALIDATION_DEPTH=3

# =================================================================
# PROCESSING CONFIGURATION
# =================================================================

# Parallel Processing (Large Scale)
CODESAGE_PARALLEL_WORKERS=8
CODESAGE_BATCH_SIZE=200
CODESAGE_MAX_FILE_SIZE_MB=2

# Index Optimization (Large Scale)
CODESAGE_INDEX_COMPRESSION=true
CODESAGE_INDEX_COMPRESSION_TYPE=ivf_pq
CODESAGE_INDEX_TYPE=auto
CODESAGE_FAISS_NLIST_AUTO=true
CODESAGE_TARGET_MEMORY_MB=1000

# =================================================================
# SEARCH CONFIGURATION
# =================================================================

# Search Parameters (Large Scale)
CODESAGE_DEFAULT_TOP_K=5
CODESAGE_MAX_TOP_K=20
CODESAGE_SEMANTIC_SEARCH_ENABLED=true
CODESAGE_TEXT_SEARCH_ENABLED=true
CODESAGE_HYBRID_SEARCH_WEIGHT=0.6

# Search Optimization (Large Scale)
CODESAGE_SEARCH_CACHE_ENABLED=true
CODESAGE_SEARCH_CACHE_SIZE=5000
CODESAGE_SEARCH_CACHE_SIMILARITY_THRESHOLD=0.9
CODESAGE_SEARCH_BATCH_SIZE=20
CODESAGE_SEARCH_TIMEOUT=10

# =================================================================
# LOGGING & MONITORING
# =================================================================

# Logging (Comprehensive for Large Scale)
CODESAGE_LOG_LEVEL=INFO
CODESAGE_LOG_FORMAT=json
CODESAGE_LOG_FILE=/var/log/codesage/codesage_large.log
CODESAGE_LOG_MAX_SIZE=2GB
CODESAGE_LOG_BACKUP_COUNT=15

# Performance Logging (Large Scale)
CODESAGE_PERFORMANCE_LOGGING_ENABLED=true
CODESAGE_SLOW_QUERY_THRESHOLD=1.0
CODESAGE_LARGE_CODEBASE_LOGGING=true

# Monitoring (Large Scale)
CODESAGE_HEALTH_CHECK_ENABLED=true
CODESAGE_METRICS_PORT=9090
CODESAGE_PERFORMANCE_MONITORING_ENABLED=true
CODESAGE_METRICS_COLLECTION_INTERVAL=20
CODESAGE_LARGE_CODEBASE_METRICS=true

# =================================================================
# LARGE CODEBASE FEATURES
# =================================================================

# Incremental Indexing (Essential for Large Codebases)
CODESAGE_INCREMENTAL_INDEXING_ENABLED=true
CODESAGE_INCREMENTAL_INDEXING_BATCH_SIZE=100
CODESAGE_INCREMENTAL_INDEXING_CHECK_INTERVAL=300

# Memory Management (Large Scale)
CODESAGE_LARGE_CODEBASE_MEMORY_OPTIMIZATION=true
CODESAGE_MEMORY_CLEANUP_INTERVAL=30
CODESAGE_AGGRESSIVE_MEMORY_CLEANUP=false

# Processing Optimization (Large Scale)
CODESAGE_LARGE_CODEBASE_PROCESSING=true
CODESAGE_FILE_PROCESSING_TIMEOUT=300
CODESAGE_INDEX_BUILD_TIMEOUT=1800

# =================================================================
# SCALING FEATURES
# =================================================================

# Load Balancing (Large Scale)
CODESAGE_ENABLE_LOAD_BALANCING=true
CODESAGE_LOAD_BALANCER_HEALTH_CHECK_INTERVAL=10
CODESAGE_CONNECTION_POOL_SIZE=20

# Auto Scaling (Large Scale)
CODESAGE_ENABLE_AUTO_SCALING=true
CODESAGE_SCALING_METRIC=memory
CODESAGE_SCALING_TARGET=75
CODESAGE_MIN_WORKERS=4
CODESAGE_MAX_WORKERS=16

# Resource Management (Large Scale)
CODESAGE_ENABLE_RESOURCE_QUOTAS=true
CODESAGE_MAX_CONCURRENT_REQUESTS=50
CODESAGE_REQUEST_QUEUE_SIZE=100

# =================================================================
# INTEGRATION SETTINGS
# =================================================================

# Gemini CLI Integration (Large Scale)
CODESAGE_MCP_SERVER_NAME=codesage-large
CODESAGE_MCP_SERVER_URL=https://codesage-large.yourdomain.com

# =================================================================
# LARGE CODEBASE NOTES
# =================================================================
# - This configuration is optimized for large codebases
# - Suitable for projects with 10k+ files
# - Enables advanced indexing and memory management
# - Comprehensive monitoring for large-scale operations
#
# Large Codebase Characteristics:
# - Files: 10,000 - 100,000+
# - Index Size: 1GB - 10GB+
# - Memory Usage: 1GB - 4GB+
# - Processing Time: Minutes to hours for initial indexing
#
# Performance Optimizations:
# - Incremental indexing for efficient updates
# - Memory-mapped indexes for large datasets
# - Parallel processing for faster indexing
# - Advanced compression for storage efficiency
#
# Scaling Considerations:
# - Horizontal scaling recommended for very large codebases
# - Consider distributed indexing for 100k+ files
# - Monitor memory usage closely during indexing
# - Plan for periodic index optimization
#
# System Requirements:
# - RAM: 4GB+ recommended, 8GB+ for very large codebases
# - CPU: 4+ cores recommended, 8+ cores optimal
# - Storage: 50GB+ free space for indexes and caches
# - Network: Stable high-bandwidth connection
#
# For different scales, see:
# - config/templates/production.env (standard scale)
# - config/templates/high-performance.env (maximum performance)
# - config/templates/memory-constrained.env (limited resources)
#
# Maintenance Notes:
# - Regular index optimization recommended
# - Monitor cache hit rates and adjust sizes
# - Consider periodic full re-indexing
# - Backup strategies essential for large indexes